//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public with sharing class SnowflakeErrorDetail {

	public Data data {get;set;} 
	public String message {get;set;} 
	public String code {get;set;} 
	public Boolean success {get;set;} 

	public SnowflakeErrorDetail(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'data') {
						data = new Data(parser);
					} else if (text == 'message') {
						message = parser.getText();
					} else if (text == 'code') {
						code = parser.getText();
					} else if (text == 'success') {
						success = parser.getBooleanValue();
					} else {
						System.debug(LoggingLevel.WARN, 'SnowflakeErrorDetail consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Data {
		public Boolean internalError {get;set;} 
		public String errorCode {get;set;} 
		public Integer age {get;set;} 
		public String sqlState {get;set;} 
		public String queryId {get;set;} 
		public Integer line {get;set;} 
		public Integer pos {get;set;} 
		public String type_Z {get;set;} // in json: type

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'internalError') {
							internalError = parser.getBooleanValue();
						} else if (text == 'errorCode') {
							errorCode = parser.getText();
						} else if (text == 'age') {
							age = parser.getIntegerValue();
						} else if (text == 'sqlState') {
							sqlState = parser.getText();
						} else if (text == 'queryId') {
							queryId = parser.getText();
						} else if (text == 'line') {
							line = parser.getIntegerValue();
						} else if (text == 'pos') {
							pos = parser.getIntegerValue();
						} else if (text == 'type') {
							type_Z = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static SnowflakeErrorDetail parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new SnowflakeErrorDetail(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	





}